{
  "Comment": "A description of my state machine",
  "StartAt": "Has new blog article within last 24 hours",
  "States": {
    "Has new blog article within last 24 hours": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "${HasNewBlogArticleFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Has new Blog Article?"
    },
    "Has new Blog Article?": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.hasNewBlogArticle",
              "BooleanEquals": true
            }
          ],
          "Next": "List Contacts"
        }
      ],
      "Default": "No new article > do nothing"
    },
    "List Contacts": {
      "Type": "Task",
      "Next": "Chunk Contacts",
      "Parameters": {
        "ContactListName": "${ContactListName}"
      },
      "Resource": "arn:aws:states:::aws-sdk:sesv2:listContacts",
      "ResultPath": "$.output"
    },
    "Chunk Contacts": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${ChunkContactsFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "For Each Contact Chunk"
    },
    "For Each Contact Chunk": {
      "Type": "Map",
      "Iterator": {
        "StartAt": "Transform to Send Email Parameters",
        "States": {
          "Transform to Send Email Parameters": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${TransformToSendBulkEmailFunctionArn}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "Next": "Send Email in Bulk"
          },
          "Send Email in Bulk": {
            "Type": "Task",
            "Parameters": {
              "BulkEmailEntries.$": "$.BulkEmailEntries",
              "DefaultContent.$": "$.DefaultContent",
              "FromEmailAddress.$": "$.FromEmailAddress",
            },
            "Resource": "arn:aws:states:::aws-sdk:sesv2:sendBulkEmail",
            "End": true
          }
        }
      },
      "ItemsPath": "$.chunks",
      "End": true
    },
    "No new article > do nothing": {
      "Type": "Succeed"
    }
  }
}